plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace 'com.example.youtube_configuration_app'
    compileSdk = 34 // Ensure you specify a compatible compileSdk version
    ndkVersion = '21.1.6352462' // Ensure this matches your setup

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'com.example.youtube_configuration_app'
        minSdk = 21 // Ensure you specify a compatible minSdk version
        targetSdk = 31 // Ensure you specify a compatible targetSdk version
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}
